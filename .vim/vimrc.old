
" Sasse edit 2015-09-29 	All the following is for Vundle (a vim plugin-manager)



"set nocompatible              " be iMproved, required
"filetype off                  " required

execute pathogen#infect()



" set the runtime path to include Vundle and initialize
"set rtp+=~/.vim/bundle/Vundle.vim
"call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
"Plugin 'VundleVim/Vundle.vim'

"Plugin 'php.vim'

"Bundle 'joonty/vim-phpqa.git'

"Plugin 'phpcs.vim'

"Plugin 'phpmd.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
"Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
"Plugin 'L9'
" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Avoid a name conflict with L9
"Plugin 'user/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
"call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line



" Sasse edit 2015-09-29
syntax on

au BufNewFile,BufRead *.txt set filetype=conf
set number

" Doesn't seem to work
set clipboard=unnamedplus



" Don't use Phpcs (PHP Code Sniffer)
let g:phpqa_codesniffer_autorun = 0

" Set Phpmd xml-file (PHP Mess Detector)
"let g:phpqa_messdetector_ruleset = "/path/to/phpmd.xml"



" Leader is backslash by default.
" Does seem kind of buggy, either file needs to be empty or I need to be on end of line
"function RangerExplorer()
"	    exec "silent !ranger --choosefile=/tmp/vim_ranger_current_file " . expand("%:p:h")
"	        if filereadable('/tmp/vim_ranger_current_file')
"			        exec 'edit ' . system('cat /tmp/vim_ranger_current_file')
"				        call system('rm /tmp/vim_ranger_current_file')
"					    endif
"					        redraw!
"					endfun
"					map <Leader>x :call RangerExplorer()<CR>


